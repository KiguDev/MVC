<h1>Ordenes</h1>

<!--ALERTAS-->
<div class="alert alert-danger" id="errorOrden-alert" hidden>
    <button type="button" class="close" data-dismiss="alert">x</button>
</div>

<div class="alert alert-success" id="successOrden-alert" hidden>
    <button type="button" class="close" data-dismiss="alert">x</button>
</div>

<!--SECCION PARA VER TODAS LAS ORDENES-->
<div class="row ordenes">
    <div class="col-sm-12" id="ordenesTodas">
        <a id="Ordenes">Todas las ordenes </a>
        <button class="btn btn-primary" id="NuevaOrden" style="display: none;">Nueva orden </button>
    </div>
    <div class="ordenes-todas col-sm-12" style="display: none;">
        <table class="table">
            <tr>
                <th class="col-sm-2">Orden</th>
                <th class="col-sm-3">Estatus</th>
                <th class="col-sm-2">Total</th>
                <th class="col-sm-4">Fecha</th>
                <th class="col-sm-1">Opciones</th>
            </tr>
        </table>
    </div>
</div>

<!--SECCION PARA EDITAR UNA ORDEN-->
<div class="row editar-orden" style="display: none;">
    <div class="col-sm-12">
        <h3 id="numeroOrdenEditar"></h3>
    </div>
    <div class="col-sm-6" id="ProductosEdit">
        <table class="table">
            <thead><h3>PRODUCTOS</h3></thead>
            <tr>
                <th class="col-sm-5">Nombre</th>
                <th class="col-sm-7">Precio</th>
            </tr>
        </table>
    </div>

    <div class="col-sm-6" id="CuentaEdit">

        <table class="table">
            <thead><h3>CUENTA</h3></thead>
            <tr>
                <th>Producto</th>
                <th>Cantidad</th>
                <th>Precio unitario</th>
                <th>Subtotal</th>
                <th>Eliminar</th>
            </tr>
        </table>
    </div>

</div>

<!--SECCION PARA EL TOTAL DE EDITAR LA ORDEN-->
<div class="row editar-orden">
    <div class="col-sm-6"></div>
    <div class="col-sm-6" id="totalEditarOrden" style="display: none;">
        <h3>TOTAL: $<b id="TotalEditar">0</b> </h3>
        <button class="btn btn-primary" id="ConfirmarEditarOrden">Confirmar</button>
        <button class="btn btn-primary" id="EditarOrden" style="display: none;">Guardar</button>
        <a id="CancelarOrdenEditarInstante" style="display: none;">Cancelar</a>
    </div>
</div>

<!--SECCION PARA UNA ORDEN NUEVA-->
<div class="row nueva-orden">
    <div class="col-sm-6" id="Productos">
        <table class="table">
            <thead><h3>PRODUCTOS</h3></thead>
            <tr>
                <th class="col-sm-5">Nombre</th>
                <th class="col-sm-7">Precio</th>
            </tr>
        </table>
    </div>
    <div class="col-sm-6" id="Cuenta">

        <table class="table">
            <thead><h3>CUENTA</h3></thead>
            <tr>
                <th class="col-sm-3">Producto</th>
                <th class="col-sm-2">Cantidad</th>
                <th class="col-sm-3">Precio unitario</th>
                <th class="col-sm-3">Subtotal</th>
                <th class="col-sm-1">Eliminar</th>
            </tr>
        </table>
    </div>
</div>

<!--SECCION PARA EL TOTAL DE LA CUENTA PARA ORDEN NUEVA-->
<div class="row nueva-orden">
    <div class="col-sm-6"></div>
    <div class="col-sm-6">
        <h3>TOTAL: $<b id="Total" id="totalOrden">0</b> </h3>
        <button class="btn btn-primary" id="ConfirmarOrden">Confirmar</button>
        <button class="btn btn-primary" id="GuardarOrden" style="display: none;">Guardar</button>
        <a id="CancelarOrdenInstante" style="display: none;">Cancelar</a>
    </div>
</div>

@section Scripts{

    <script>
        var total = 0;
        var subtotal = 0;
        var template;
        var templateCuenta;
        var templateOrdenes;
        var templateProductosEditar;
        var templateCuentaEditar;
        var idOrden;
        var nuevosProductosEditarOrden = [];
        var productosEliminar = [];

        //Se obtiene el id del restaurante de la URL
        var actual = window.location+'';
        var split = actual.split("/");
        var resId = split[split.length - 1];

        $(document).ready(function () {
            //Obtiene template de la parte de productos
            $.get("@Url.Action("ProductoView","Ordenes")", function (res) {
                template = res;
            }).done(function () {
            //Muestra los productos existentes en el restaurante
                $.getJSON("/api/ordenes/GetProductos/" + resId, function (res) {
                    $.map(res, function (r) {
                        var element = $(template);
                        element.find('.id-producto').val(r.id);
                        element.find('.product-name').text(r.nombre);
                        element.find('.product-precio').text(r.precio);
                        $("#Productos").append(element);
                    })
                })
            })

            //Obtiene template de la parte del carrito
            $.get("@Url.Action("ProductoAddView","Ordenes")", function (res) {
                templateCuenta = res;
            })

            //Obtiene template de la parte del carrito
            $.get("@Url.Action("EditarOrdenView","Ordenes")", function (res) {
                templateCuentaEditar = res;
            })

            //Obtiene template de la parte de los productos
            $.get("@Url.Action("EditarProductoView","Ordenes")", function (res) {
                templateProductosEditar = res;
            })
        })

        //Agregar producto al carrito
        $(document).on('click', '.producto', function () {
            var existe = false;
            var prods = $('.row-producto');
            var precio = $(this).find('.product-precio').text();
            var nombre = $(this).find('.product-name').text();
            var idProd = $(this).find('.id-producto').val();

            $.map(prods, function (p) {
                if ($(p).find('.id-producto').val() == idProd) {
                    existe = true;
                    alertError("El producto ya ha sido agregado a la cuenta.")
                }
            })
            if (!existe) {
                var element = $(templateCuenta);
                element.find('.id-producto').val(idProd);
                element.find('.precioProducto').text(precio);
                element.find('.nombreProducto').text(nombre);
                element.find('.subtotalProducto').text(precio);
                //Modifica subtotal de acuerdo a la cantidad
                element.find('.cantidadProducto').change(function () {
                    cantidad = $(this).val();
                    subtotal = cantidad * parseInt(precio);
                    element.find('.subtotalProducto').text(subtotal);
                })
                //Eliminar producto del carro
                element.find('.eliminarProducto').on('click', function () {
                    element.remove();
                })
                if ($('#ConfirmarOrden').is(':hidden')) {
                    $('#GuardarOrden').hide()
                    $('#CancelarOrdenInstante').hide()
                    $('#ConfirmarOrden').show()
                }
                $("#Cuenta").append(element);
            }
        })

        //Cancela la orden
        $('#CancelarOrdenInstante').on('click', function () {
            $(this).hide();
            $('#GuardarOrden').hide()
            $('#ConfirmarOrden').show()
            var carrito = $('.row-producto');
            carrito.find('.cantidadProducto').prop('disabled', false);

        })

        //Confirma la orden y deja lista la orden para ser creada
        $('#ConfirmarOrden').on('click', function () {
            var carrito = $('.row-producto');
            var total = 0;
            $.map(carrito, function (r) {
                elemento = $(r);
                total = total + parseInt(elemento.find('.subtotalProducto').text());
            })
            $("#Total").text(total);
            if (total > 0) {
                $(this).hide();
                $('#GuardarOrden').show()
                $('#CancelarOrdenInstante').show()
                carrito.find('.cantidadProducto').prop('disabled', true);
            }
        })

        //Genera la orden y agrega los productos a la misma
        $('#GuardarOrden').on('click', function () {
            var carrito = $('.row-producto');
            var ids = [];
            var subtotales = [];
            var total = $('#Total').text();
            var cantidades = [];
            var ordenId = 0;
            var contadorProductos = 0;
            var oJSON = {};

            $.map(carrito, function (r) {
                elemento = $(r);
                ids.push(elemento.find('.id-producto').val());
                subtotales.push(elemento.find('.subtotalProducto').text());
                cantidades.push(elemento.find('.cantidadProducto').val())
                elemento.remove();
            })

            oJSON["Total"] = total;
            oJSON["RestauranteId"] = resId;

            $.post("/api/ordenes", oJSON, function (res) {
                ordenId = res;
            }).done(function () {
                if (ordenId > 0) {
                    for (i = 0; i < ids.length; ++i) {
                        var opJSON = {};
                        opJSON["OrdenId"] = ordenId;
                        opJSON["ProductoId"] = ids[i];
                        opJSON["Subtotal"] = subtotales[i];
                        opJSON["Cantidad"] = cantidades[i];

                        $.post("/api/ordenes/PostProductoOrden", opJSON, function (res) {
                            console.log(res);
                        }).done(function () {
                            contadorProductos++;
                            if (contadorProductos == ids.length) {
                                $("#Total").text(0);
                                $('#GuardarOrden').hide();
                                $('#CancelarOrdenInstante').hide();
                                $('#ConfirmarOrden').show()

                                alertSuccess("La orden fue creada con exito.");
                            }
                        }).fail(function () {
                            alertError("No se pudieron agregar productos a la orden.")
                        })
                    }
                }
            }).fail(function () {
                alertError("La orden no pudo ser creada.")
            })
        })

        //Oculta la pantalla para agregar una nueva orden y muestra la lista de ordenes
        $('#Ordenes').on('click', function () {
            $(this).hide()
            $('.editar-orden').hide();
            $('#totalEditarOrden').hide();
            $('#TotalEditar').text(0);
            $('.nueva-orden').hide()
            $('.row-producto').remove()
            $('.row-edit-producto').remove()
            $('.producto').hide()
            $('.producto-edit').hide()
            $('#NuevaOrden').show();
            ObtenerOrdenes();
            $('.ordenes-todas').show()
            nuevosProductosEditarOrden = [];
            productosEliminar = [];
        })

        //Oculta la lista de ordenes y muestra la pantalla para agregar una nueva
        $('#NuevaOrden').on('click', function () {
            $(this).hide()
            NuevaOrden();
        })

        //Muestra la vista con la lista de ordenes
        function ObtenerOrdenes() {
            //Obtiene template para las ordenes
            $.get("@Url.Action("OrdenesView","Ordenes")", function (res) {
                templateOrdenes = res;
            }).done(function () {
                $.getJSON("/api/ordenes/GetOrdenes/" + resId, function (res) {
                    $.map(res, function (r) {
                        var element = $(templateOrdenes);
                        var fecha = r.fechaDeAlta.substring(0, 10) + " " + r.fechaDeAlta.substring(12, 19);
                        var total = "$" + r.total.toFixed(2);
                        element.find('.idOrden').text(r.id);
                        element.find('.estatusOrden').text((r.estatus == 0) ? "Abierta":"Cerrada");
                        element.find('.totalOrden').text(total);
                        element.find('.fechaOrden').text(fecha);
                        element.find('.cambiarEstatus').on('click', function () {
                            idOrden = element.find('.idOrden').text();
                            CambiarEstatus(idOrden);
                        })
                        element.find('.editarOrden').on('click', function () {
                            idOrden = element.find('.idOrden').text();
                            EditarOrden(idOrden,r.estatus )
                        })
                        $('.ordenes-todas').append(element);
                    })
                })
            })
        }

        //Cambia el esatus de la orden
        function CambiarEstatus(ordenId) {
            var estadoEstatus = false;
            $.post("/api/ordenes/PostCambiarEstatus", { idOrden: ordenId }, function (res) {
                estadoEstatus = res;
            }).done(function () {
                if (estadoEstatus) {
                    $('.row-orden').remove()
                    ObtenerOrdenes()
                }
            })
        }
        
        //Abre la vista para la edicion de la orden 
        function EditarOrden(ordenId, estatus) {
            if (estatus != 0) {
                alertError("La orden ya ha sido cerrada.")
           } else {
               $('#Ordenes').show()
               $('.ordenes-todas').hide()
               $('.row-orden').remove()
               $('#ConfirmarEditarOrden').show();
               $('#EditarOrden').hide();
               $('#numeroOrdenEditar').text('Orden #' + ordenId).css( "font-weight", "bold");

                var productos = [];
                //Obtiene los productos existentes en el restaurante
                $.getJSON("/api/ordenes/GetProductos/" + resId, function (res) {
                    $.map(res, function (r) {
                        var element = $(templateProductosEditar);
                        element.find('.id-producto').val(r.id);
                        element.find('.product-name').text(r.nombre);
                        element.find('.product-precio').text(r.precio);
                        $("#ProductosEdit").append(element);
                        productos[r.id] = r;
                    })
                }).done(function () {

                    $.getJSON("/api/ordenes/GetOrdenProductos/" + ordenId, function (res) {
                        $.map(res, function (r) {
                            var element = $(templateCuentaEditar);
                            var producto = productos[r.productoId];
                            var precio = producto.precio;
                            element.find('.id-producto').val(r.productoId);
                            element.find('.precioProducto').text(precio);
                            element.find('.nombreProducto').text(producto.nombre);
                            element.find('.subtotalProducto').text(r.subTotal);
                            element.find('.cantidadProducto').val(r.cantidad);
                            //Modifica subtotal de acuerdo a la cantidad (edicion)
                            element.find('.cantidadProducto').change(function () {
                                cantidad = $(this).val();
                                subtotal = cantidad * parseInt(precio);
                                element.find('.subtotalProducto').text(subtotal);
                            })
                            //Eliminar producto del carro (edocion)
                            element.find('.eliminarProducto').on('click', function () {
                                productosEliminar.push(r.productoId);
                                element.remove();
                            })
                            $("#CuentaEdit").append(element);
                        })
                    })
                })
                $('.editar-orden').show();
                $('#totalEditarOrden').show();
            }
        }

        //Agregar producto al carrito (edicion)
        $(document).on('click', '.producto-edit', function () {
            var existe = false;
            var prods = $('.row-edit-producto');
            var precio = $(this).find('.product-precio').text();
            var nombre = $(this).find('.product-name').text();
            var idProd = $(this).find('.id-producto').val();
            //Valida si el producto ya esta en la cuenta (edicion)
            $.map(prods, function (p) {
                if ($(p).find('.id-producto').val() == idProd) {
                    existe = true;
                    alertError("El producto ya ha sido agregado a la cuenta.")
                }
            })
            if (!existe) {
                var element = $(templateCuentaEditar);
                element.find('.id-producto').val(idProd);
                element.find('.precioProducto').text(precio);
                element.find('.nombreProducto').text(nombre);
                element.find('.subtotalProducto').text(precio);
                //Modifica subtotal de acuerdo a la cantidad
                element.find('.cantidadProducto').change(function () {
                    cantidad = $(this).val();
                    subtotal = cantidad * parseInt(precio);
                    element.find('.subtotalProducto').text(subtotal);
                })
                //Eliminar producto del carro
                element.find('.eliminarProducto').on('click', function () {
                    element.remove();
                })
                nuevosProductosEditarOrden.push(element);
                if ($('#ConfirmarEditarOrden').is(':hidden')) {
                    $('#EditarOrden').hide()
                    $('#CancelarOrdenEditarInstante').hide()
                    $('#ConfirmarEditarOrden').show()
                }
                $("#CuentaEdit").append(element);
            }
        })

        //Cancela la edicion de la orden
        $('#CancelarOrdenEditarInstante').on('click', function () {
            $(this).hide();
            $('#EditarOrden').hide()
            $('#ConfirmarEditarOrden').show()
            var carritoEditar = $('.row-edit-producto');
            carritoEditar.find('.cantidadProducto').prop('disabled', false);
        })

        //Confirma la edicion de la orden
        $('#ConfirmarEditarOrden').on('click', function () {
            var carritoEditar = $('.row-edit-producto');
            var total = 0;
            $.map(carritoEditar, function (r) {
                elemento = $(r);
                total = total + parseInt(elemento.find('.subtotalProducto').text());
            })
            $('#TotalEditar').text(total);
            if (total > 0) {
                $(this).hide();
                $('#EditarOrden').show()
                $('#CancelarOrdenEditarInstante').show()
                carritoEditar.find('.cantidadProducto').prop('disabled', true);
            }
        })

        //Acciones para la edicion de la orden
        $('#EditarOrden').on('click', function () {
            var carrito = $('.row-edit-producto');
            var total = $('#TotalEditar').text();
            var prodIds = [];
            var subtotalesProd = [];
            var cantidadesProd = [];

            var prodNIds = [];
            var subtotalesNProd = [];
            var cantidadesNProd = [];

            var ordenJSON = {};
            ordenJSON["Total"] = total;
            ordenJSON["Id"] = idOrden;

            if (nuevosProductosEditarOrden.length > 0) {
                var loccarrito = [];
                for (var n = nuevosProductosEditarOrden.length; n >= 1 ; --n) {
                    loccarrito.push(nuevosProductosEditarOrden[n-1]);
                }
                var contLoc = loccarrito.length;

                $.map(loccarrito, function (r) {
                    elementoN = $(r);
                    prodNIds.push(elementoN.find('.id-producto').val());
                    subtotalesNProd.push(elementoN.find('.subtotalProducto').text());
                    cantidadesNProd.push(elementoN.find('.cantidadProducto').val())
                    elementoN.remove();
                    carrito.splice(contLoc);
                    contLoc--;
                })
                for (var z = 0; z < nuevosProductosEditarOrden.length; ++z) {
                    var ordprdoNJSON = {};
                    ordprdoNJSON["OrdenId"] = idOrden;
                    ordprdoNJSON["ProductoId"] = prodNIds[z];
                    ordprdoNJSON["Subtotal"] = subtotalesNProd[z];
                    ordprdoNJSON["Cantidad"] = cantidadesNProd[z];
                    $.post("/api/ordenes/PostProductoOrden", ordprdoNJSON, function (res) {

                    })
                }
            }

            $.map(carrito, function (r) {
                elemento = $(r);
                prodIds.push(elemento.find('.id-producto').val());
                subtotalesProd.push(elemento.find('.subtotalProducto').text());
                cantidadesProd.push(elemento.find('.cantidadProducto').val())
                elemento.remove();
            })

            if (productosEliminar.length > 0) {
                productosEliminar.push(idOrden);
                $.post("/api/ordenes/PostEliminarProductoOrden", {ids: productosEliminar }, function (res) {

                })
            }
            $.post("/api/ordenes/PostEditarOrden", ordenJSON, function (res) {

            }).done(function () {
                for (j = 0; j < prodIds.length; ++j) {
                    var ordprdoJSON = {};
                    ordprdoJSON["OrdenId"] = idOrden;
                    ordprdoJSON["ProductoId"] = prodIds[j];
                    ordprdoJSON["Subtotal"] = subtotalesProd[j];
                    ordprdoJSON["Cantidad"] = cantidadesProd[j];
                    $.post("/api/ordenes/PostEditarProductoOrden", ordprdoJSON, function (res) {

                    }).done(function () {
                        $("#TotalEditar").text(0);
                        $('#EditarOrden').hide();
                        $('#CancelarOrdenEditarInstante').hide();
                        $('#ConfirmarEditarOrden').show()
                       alertSuccess("La orden ha sido editada.")
                    }).fail(function () {
                        alertError("La orden no se ha podido editar.")
                   })
                }
            }).fail(function () {
                alertError("La orden no se ha podido editar.")
            }).always(function () {
                $('#editar-orden').hide();
                $('.row-orden').remove();
                $('#Ordenes').trigger('click');
            })
        })

        //Acciones necesarias para mostrar la pantalla de nueva orden
        function NuevaOrden() {
            $('.producto').show()
            $('.row-orden').remove()
            $('.row-producto').remove()
            $('#GuardarOrden').hide();
            $('#ConfirmarOrden').show();
            $('#Total').text(0);
            $('#Ordenes').show()
            $('.ordenes-todas').hide()
            $('.nueva-orden').show()
            $('.editar-orden').hide();
            $('#totalEditarOrden').hide();
        }
        
        //Alerta generica para hechos
        function alertSuccess(message) {
            $("#successOrden-alert").html('<strong>HECHO! </strong>'+message);
            $("#successOrden-alert").fadeTo(2000, 500).slideUp(500, function () {
                $("#successOrden-alert").slideUp(500);
            });
        }
        //Alerta generica para errores
        function alertError(message) {
            $("#errorOrden-alert").html('<strong>ERROR! </strong>'+message);
            $("#errorOrden-alert").fadeTo(2000, 500).slideUp(500, function () {
                $("#errorOrden-alert").slideUp(500);
            });
        }

    </script>

}

@*
            /*CODIGO ANTERIOR PARA LA PRIMER PANTALLA
    
    if (ordenId > 0) {
                for (i = 0; i < ids.length; ++i){
                    var opJSON = {};
                    opJSON["OrdenId"] = ordenId;
                    opJSON["ProductoId"] = ids[i];
                    opJSON["Subtotal"] = subtotales[i];

                    $.post("/api/ordenes/PostProductoOrden", opJSON, function (res) {
                        console.log(res);
                    })
                }
            }*/


            /*$("#Total").text(0);
            $(this).hide();
            $('#ConfirmarOrden').show()*/


    fetch('/api/ordenes/GetCantidadProducto/'+resId, {
        method: 'GET',
        headers:{
            'Content-Type': 'application/json'
        }
    }).then(function (response) {
        if (response.ok) {
            response.text().then(function (text) {
                dibujaProductos(text)
            })
        }
    });


    function dibujaProductos(cantidad) {
        for (i = 0; i < cantidad; i++) {
            fetch('@Url.Action("ProductoView","Ordenes")', {
                method: "GET"
            }).then(function (response) {
                if (response.ok) {
                    response.text().then(function (text) {
                        var divProd = document.getElementById("Productos");
                        divProd.innerHTML += text;
                    }).then(function () {
                        AddListeners();
                    })
                }
            }) ;
        }
    }

    function AddListeners() {
        var buttons =  document.getElementsByClassName("producto");
        for (i = 0; i < buttons.length; i++) {
            buttons[i].addEventListener("click", function () {
                fetch(`@Url.Action("ProductoAddView","Ordenes")`, {
                method: "GET"
            }).then(function (response) {
                if (response.ok) {
                    response.text().then(function (text) {
                        document.getElementById("Cuenta").innerHTML += text;
                        total += 100;
                        document.getElementById("Total").innerHTML = total;
                        AddEliminarListener();
                    })
                }
            });
            })
        }
    }

    function AddEliminarListener() {
        var buttons =  document.getElementsByClassName("eliminarProducto");
        for (i = 0; i < buttons.length; i++) {
            buttons[i].addEventListener("click", function () {
                //total = total - 100;
                //$('#Total').text(total);
                //this.parentNode.parentNode.parentNode.removeChild( this.parentNode.parentNode);
            });
        }
    }*@

