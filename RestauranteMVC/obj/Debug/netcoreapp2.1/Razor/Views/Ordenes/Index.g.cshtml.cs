#pragma checksum "C:\Users\SIQUEIROS\source\repos\CURSO\RestauranteMVC\Views\Ordenes\Index.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "e455e1c6245803a5362bad6f2be84dcc21efe799"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Ordenes_Index), @"mvc.1.0.view", @"/Views/Ordenes/Index.cshtml")]
[assembly:global::Microsoft.AspNetCore.Mvc.Razor.Compilation.RazorViewAttribute(@"/Views/Ordenes/Index.cshtml", typeof(AspNetCore.Views_Ordenes_Index))]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#line 1 "C:\Users\SIQUEIROS\source\repos\CURSO\RestauranteMVC\Views\_ViewImports.cshtml"
using RestauranteMVC;

#line default
#line hidden
#line 2 "C:\Users\SIQUEIROS\source\repos\CURSO\RestauranteMVC\Views\_ViewImports.cshtml"
using RestauranteMVC.Models;

#line default
#line hidden
#line 3 "C:\Users\SIQUEIROS\source\repos\CURSO\RestauranteMVC\Views\_ViewImports.cshtml"
using Restaurante.Core.Entities;

#line default
#line hidden
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"e455e1c6245803a5362bad6f2be84dcc21efe799", @"/Views/Ordenes/Index.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"3021e54aff9ad800a8f73fda0d422276f9de9a1f", @"/Views/_ViewImports.cshtml")]
    public class Views_Ordenes_Index : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            BeginContext(0, 2, true);
            WriteLiteral("\r\n");
            EndContext();
#line 2 "C:\Users\SIQUEIROS\source\repos\CURSO\RestauranteMVC\Views\Ordenes\Index.cshtml"
  
    ViewData["Title"] = "Ordenes";

#line default
#line hidden
            BeginContext(45, 673, true);
            WriteLiteral(@"

<div style=""margin-top:40px"">
    <div class=""row"">
        <div class=""col s12 content"" id=""content"">
            <div class=""card blue-grey darken-4"">
                <div class=""card-content white-text"">
                    <a id=""agregar-orden"" class=""btn-floating halfway-fab waves-effect waves-light pulse red""><i class=""material-icons"">add</i></a>
                    <span class=""card-title"">Ordenes<span class=""new badge"" id=""cantidad""></span></span>
                </div>
            </div>
        </div>
    </div>
</div>

<div>
    <div class=""row"">
        <div class=""col s12 content"" id=""content"">
        </div>
    </div>
</div>

");
            EndContext();
            DefineSection("Scripts", async() => {
                BeginContext(737, 3243, true);
                WriteLiteral(@"
    <script>
        var urlParam = new URLSearchParams(window.location.search);
        var restauranteId = urlParam.get(""id"");
        $(document).ready(function () {
            $('#agregar-orden').on(""click"", CrearOrden);
            $.getJSON(`/api/ordenes?id=${restauranteId}`, function (response) {
                $.each(response, function (index, value) {
                    $('#cantidad').text(response.length);
                    var total = response[index][""total""];
                    var estatus = response[index]['estatus'] == 1 ? ""Pendiente"" : ""Cocinando"";
                    var fecha = new Date(response[index]['fechaAlta']);
                    var idOrden = response[index]['id'];
                    var carta = `<div class=""card blue-grey darken-4 ""  id=""carta"" style=""margin-top:40px"">
                                        <div class=""card-content white-text"" id=""carta-cuerpo"">
                                             <a href=""/ordenes/productos?id=${idOrden}""  class=""btn");
                WriteLiteral(@"-floating halfway-fab waves-effect waves-light pulse red""><i class=""material-icons"">add_shopping_cart</i></a>
                                            <span class=""card-title"">Orden #${idOrden}</span>
                                            <div class=""row"">
                                                <div class=""col-sm-4""><p>Estatus</p></div>
                                                <div class=""col-sm-4""><p>Fecha de creacion</p></div>
                                                <div class=""col-sm-4""><p>Total</p></div>
                                            </div>
                                            <div class=""row"">
                                                <div class=""col-sm-4""><p>${estatus}</p></div>
                                                <div class=""col-sm-4""><p>${fecha.toLocaleDateString()}</p></div>
                                                <div class=""col-sm-4""><p>$${total}</p></div>
                                            </div>
 ");
                WriteLiteral(@"                                       </div>
                                        <div class=""card-action"">
                                            <a href=""/orderdetails?id=${idOrden}"">Ver Detalles</a>
                                        </div>
                                    </div>`;
                    $('#content').append(carta);
                    console.log(response[index]['total']);
                });
            });
        });

        function CrearOrden() {
            var data = {
                restauranteId: restauranteId,
                estatus: 1,
                total: 0
            };
            fetch('/api/ordenes', { method: 'POST', body: JSON.stringify(data), headers: { 'Content-Type': 'application/json' } })
                .then(function (response) {
                    console.log(response.statusText)
                    if (response.ok) {
                        console.log(""success"");
                    }
                });
        }
");
                WriteLiteral("\n        function mostrar() {\r\n            \r\n        }\r\n\r\n        function clean() {\r\n\r\n        }\r\n\r\n        function carta() {\r\n            \r\n        }\r\n\r\n    </script>\r\n");
                EndContext();
            }
            );
            BeginContext(3983, 4, true);
            WriteLiteral("\r\n\r\n");
            EndContext();
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
