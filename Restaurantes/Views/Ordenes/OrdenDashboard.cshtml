@model OrdenDashboardViewModel
@{
    ViewData["Title"] = "OrdenDashboard";
}

<h1>Dashboard Ordenes</h1>

<div class="row">
    <div class="col-sm-6">
        <a class="btn btn-outline-danger " id="Cerrar">Cerrar Orden</a>
        <a href="/Ordenes/OrdenDashboard/" class="btn btn-outline-success " id="nueva">Nueva Orden</a>
    </div>
</div>

<div class="row mt-3">
    <div class="col-sm-5 card">
        <div class="card-body">
            <h5>Resumen de Orden</h5>
            <ul class="list-group list-group-flush" id="listado">
            </ul>

        </div>
        <div class=card-footer>
            <h6 id="totalTxt">Total: </h6>
            <input id="totalVal" type="hidden" value="0" />
            <div>
                <a class="btn btn-primary btn-sm" id="guardar" style="color:white">Guardar @*<i class="far fa-save"></i>*@ </a>
            </div>
        </div>
    </div>


    <div class="col-sm-6">
        <div class="row productos">



        </div>
    </div>
    
</div>





<div class="modal" tabindex="-1" role="dialog" id="modalCantidad">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Cantidad</h5>

                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>

            </div>
            <div class="modal-body">
                <div class="form-group">
                    <label for="cantidad-modal">Cantidad de producto</label>
                    <input type="number" class="form-control" id="cantidad-modal" min="0" />
                    <input type="hidden" id="precio-modal" />
                    <input type="hidden" id="id-modal" />
                    <input type="hidden" id="nombre-modal" />
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-primary" id="agregarProducto">Agregar</button>
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Cerrar</button>
            </div>
        </div>
    </div>
</div>




@section Scripts{


    <script>
        
        var productos = [];
        var ordenId = 0;
        function guardarOrden() {
            if (ordenId == 0) {

                $.post('/api/ordenes/insertarOrden', { resId: '@Model.RestauranteId' }, function (res) {
                     ordenId = res;
                }).done(function () {
                    for (var i = 0; i < productos.length; i++) {
                        productos[i].OrdenId = ordenId;
                        $.post('/api/ordenes/insertarOTP', productos[i] , function (otpID) {
                            var otp = otpID;
                        });
                    }
                });
            }
            
        }
    var productTemplate;
    var resumenElementTemplate;
    $(document).ready( function ()  {

        $.get("@Url.Action("ProductCard","Ordenes")", function (res) {
            productTemplate = res;
              getProductos();
        });


         $.get("@Url.Action("ResumenElement","Ordenes")", function (res)  {
            resumenElementTemplate = res;
         });

        

    });
       

        $(document).on('click', '.producto', function () {

            var id = $(this).find('#id-producto').val();
            var precio = $(this).find('#precio-producto').val();
            var nombre = $(this).find('#product-name').text();
            
            var existente = verificar(id);
            //if (existente == true) {
            //    alert("Ya existe este producto");
            //}
            if (existente == false) {
                $("#id-modal").val(id);
                $("#precio-modal").val(precio);
                $("#nombre-modal").val(nombre);

                $("#modalCantidad").modal("show");
            }
            else {
                var cantidad = obtenerCantidad(id)
                $("#cantidad-modal").val(cantidad);
                $("#modalCantidad").modal("show");
            }
        });
        function obtenerCantidad(id) {
            for (var i = 0; i < productos.length; i++) {
                if (productos[i].ProductoId == id) {
                    return productos[i].Cantidad;
                    break;
                }
            }
            return 0;
        }
        $("#agregarProducto").click(function () {
            var nombre = $("#nombre-modal").val();
            var id = $("#id-modal").val();
            var precio = $("#precio-modal").val();
            var cantidad = $("#cantidad-modal").val();
            var subtotal = cantidad * precio;
            var element = $(resumenElementTemplate);
            var total = parseInt($("#totalVal").val(), 10);
            element.find("#elemento").text(`Cantidad: ${cantidad}  ${nombre}  Precio:$ ${precio} SubTotal:$ ${subtotal}`);
            element.find("#nombre").val(nombre);
            element.find("#productoId").val(id);
            element.find("#precio").val(precio);
            element.find("#cantidad").val(cantidad);
            var existente = verificar(id);
            if (existente == false) {
                $("#listado").append(element);
                var nuevototal = total + subtotal;
                $("#totalVal").val(nuevototal);
                $("#totalTxt").text("Total:$ " + nuevototal);
                $("#modalCantidad").modal("hide");
                var ordenTP = {};
                ordenTP.ProductoId = id;
                ordenTP.Cantidad = cantidad;
                productos.push(ordenTP);
            }
            else {
                var idElement = $("#listado").find("#productoId[value=" + id + "]");
                var elemento = idElement.parent().parent().find("#elemento");
                var tempPrecio = idElement.parent().find("#precio").val();
                var tempCantidad = idElement.parent().find("#cantidad").val();
                var tempSubTotal = tempCantidad * tempPrecio;
                var nuevoTotal = (total - tempSubTotal) + subtotal;
                var indexOrdenTP = buscarProducto(id);
                productos[indexOrdenTP].Cantidad = cantidad;


                //productos.findIndex(buscarProducto(:, id));
                $("#totalVal").val(nuevoTotal);
                $("#totalTxt").text("Total:$ " + nuevoTotal);
                $("#modalCantidad").modal("hide");
                elemento.text(`Cantidad: ${cantidad}  ${nombre}  Precio:$ ${precio} SubTotal:$ ${subtotal}`);
            }
            


        });
        function buscarProducto(id) {
            for (var i = 0; i < productos.length; i++) {
                if (productos[i].ProductoId == id) {
                    return i;
                    break;
                }
            }
        }
        function verificar(id) {
            for (var i = 0; i < productos.length; i++) {
                if (productos[i].ProductoId == id) {
                    return true;
                    break;
                }

            }

            return false;
        }

         function getProductos() {
             $.getJSON("/api/Producto/"+@Model.RestauranteId, function (resJson)  {

                $.map(resJson, function (producto, val)  {
                    var element = $(productTemplate);
                    element.find('.card-header').text(producto.nombre);

                    element.find('.imagen').attr("src", producto.imagen);
                    element.find('#product-name').text(producto.nombre);  //REEMPLAZA EL VALOR
                    element.find('#id-producto').val(producto.id);
                    element.find('#precio-producto').val(producto.precio);
                    $(".productos").append(element);
                });
            });
        }

        $(document).on('click', '#btn-delete', function () {
            //$("#total-label").innerHTML = total;

            var element = this;

            $(this.parentNode.parentNode).animate({
                left: '250px',
                opacity: '0.3',
                height: '100px',
                width: '0px',

            });

            var precio = $(element.parentNode).find("#precio").val();
            var cantidad =  $(element.parentNode).find("#cantidad").val();
            var subtotal = cantidad * precio;
            var total = parseInt($("#totalVal").val(), 10);
            var nuevototal = total - subtotal;
            $("#totalVal").val(nuevototal);
            $("#totalTxt").text("Total:$ " + nuevototal);

            setTimeout(function () {
                element.parentNode.parentNode.parentNode.removeChild(element.parentNode.parentNode);
            }, 300);

        });

        $(document).on('click', '#guardar',  function () {
             guardarOrden();

        });
     //btn-delete
    </script>

}
